<web-app xmlns="http://java.sun.com/xml/ns/javaee"
	      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	      version="3.0">
  <display-name>Hazelcast test cluster</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/applicationContext.xml</param-value>
	</context-param>
	
	
	<filter>
	    <filter-name>hazelcast-filter</filter-name>
	    <filter-class>com.hazelcast.web.WebFilter</filter-class>
	    <!--
		Name of the distributed map storing
		your web session objects
	    -->
	    <init-param>
		<param-name>map-name</param-name>
		<param-value>hazelcast-wm-sessions-map</param-value>
	    </init-param>
	    <!--
		How is your load-balancer configured?
		stick-session means all requests of a session
		is routed to the node where the session is first created.
		This is excellent for performance.
		If sticky-session is set to false, when a session is updated
		on a node, entry for this session on all other nodes is invalidated.
		You have to know how your load-balancer is configured before
		setting this parameter. Default is true.
	    -->
	    <init-param>
		<param-name>sticky-session</param-name>
		<param-value>true</param-value>
	    </init-param>
	    <!--
		Name of session id cookie
	    -->
	    <init-param>
		<param-name>cookie-name</param-name>
		<param-value>hazelcast.sessionId</param-value>
	    </init-param>
	    <!--
		Domain of session id cookie. Default is based on incoming request.
	    -->
	    <init-param>
		<param-name>cookie-domain</param-name>
		<param-value>.cern.ch</param-value>
	    </init-param>
	    <init-param>
		<param-name>debug</param-name>
		<param-value>true</param-value>
	    </init-param>
	    <!--
		Configuration xml location;
		    * as servlet resource OR
		    * as classpath resource OR
		    * as URL
		Default is one of hazelcast-default.xml
		or hazelcast.xml in classpath.
	    
	    <init-param>
		<param-name>config-location</param-name>
		<param-value>/WEB-INF/hazelcast.xml</param-value>
	    </init-param>
	    -->
	    <!--
		Do you want to use an existing HazelcastInstance?
		Default is null.
	    -->
	    <init-param>
		<param-name>instance-name</param-name>
		<param-value>default</param-value>
	    </init-param>
	</filter>
	
	<filter-mapping>
	    <filter-name>hazelcast-filter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>FORWARD</dispatcher>
	    <dispatcher>INCLUDE</dispatcher>
	    <dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	  <listener>
	    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	  </listener> 

	
	<listener>
	    <listener-class>com.hazelcast.web.SessionListener</listener-class>
	</listener>


</web-app>

